name: Generation Documentation

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      solution:
        required: false
        type: string
      illuminate-version:
        required: true
        type: string
      illuminate-source:
        required: true
        type: string
    secrets:
      PACKAGES_TOKEN:
        required: false

jobs:

  generate-docs:
    name: Generation Documentation
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:

      - name: Read Metadata
        run: |
          echo "Version: ${{ inputs.version }}"
          echo "Solution: ${{ inputs.solution }}"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Add GitHub Packages as a NuGet source
        shell: bash
        run: |
          if [[ "${{ secrets.PACKAGES_TOKEN }}" == "" ]]
          then
            PASSWORD="${{ secrets.GITHUB_TOKEN }}"
            echo "Using GITHUB_TOKEN"
          else
            PASSWORD="${{ secrets.PACKAGES_TOKEN }}"
            echo "Using PACKAGES_TOKEN"
          fi

          dotnet nuget add source \
            --username StudioLE \
            --password "${PASSWORD}" \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/StudioLE/index.json"

      - name: Build Solution
        run: >
          dotnet build "${{ inputs.solution }}"
          --configuration "Release"
          -p:Version="${{ inputs.version }}"
          -p:GenerateDocumentationFile=true
          -p:ProduceReferenceAssembly=true
          -p:CopyLocalLockFileAssemblies=true
          --nologo
          --verbosity minimal

      - name: Install Illuminate.Cli
        run: |
          dotnet tool install --global Illuminate --prerelease

      - name: Create artifacts directory
        run: mkdir -p artifacts/wwwroot/SourceExample

      - name: Run Illuminate.Cli
        run: >
          Illuminate
          generate
          --source "${{ inputs.illuminate-source }}"
          --output artifacts/wwwroot/SourceExample

      - name: Download Illuminate.WebAssembly
        run: |
          gh release download --pattern Illuminate.WebAssembly-*.zip --output Illuminate.WebAssembly.zip
          unzip Illuminate.WebAssembly.zip -d artifacts/

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Docs
          path: artifacts
        if: ${{ always() }}
